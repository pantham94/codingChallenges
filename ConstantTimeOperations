/*Design a data structure that supports insertion,deletion,searching and getting random element in constant time*/
package HashMap;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.Random;


public class ConstantTime {
	static HashMap<Integer,Integer> map;
	static ArrayList<Integer> list;
	
	public ConstantTime() {
		map=new HashMap<Integer,Integer>();
		list=new ArrayList<Integer>();
	}
	void insert(int key) {
		if(map.get(key)!=null)
			return;
		int s=list.size();
		list.add(key);
		map.put(key,s);
	}
	void delete(int key) {
		Integer index=map.get(key);
		if(index==null)
			return;
		map.remove(key);
		int size=list.size();
		Integer last=list.get(size-1);
		Collections.swap(list, index, size-1);
		list.remove(size-1);
		//Update index for the last element (which replaced the deleted element)
		map.put(last,index);
	}
	int search(int key) {
		if(map.get(key)==null) {
			return 0;
		}
		return map.get(key);
	}
	
	int getRandom() {
		Random ran=new Random();
		int index=ran.nextInt(list.size());
		return list.get(index);
	}
	public static void main(String[] args) {
		ConstantTime ct=new ConstantTime();
		
		int key=4;
		System.out.println("inserting key "+key);
		ct.insert(key);
		key=8;
		System.out.println("inserting key "+key);
		ct.insert(key);
		key=9;
		System.out.println("inserting key "+key);
		ct.insert(key);
		key=10;
		System.out.println("inserting key "+key);
		ct.insert(key);
		key=8;
		System.out.println(ct.search(key));
		key=18;
		System.out.println(ct.search(key));
		key=4;
		System.out.println("Delete "+key);
		ct.delete(key);
		System.out.println("getRandom method returned "+ct.getRandom());
		key=4;
		System.out.println("Searching for "+key+" returned "+ct.search(key));
	}
}
